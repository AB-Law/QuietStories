version: '3.8'

services:
  api:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_PATH=/app/data/quietstories.db
      # LMStudio configuration for Docker
      # When running in Docker, use host.docker.internal to access services on the host machine
      - LMSTUDIO_API_BASE=http://host.docker.internal:1234/v1
      - OPENAI_API_BASE=http://host.docker.internal:1234/v1
      # Embedding configuration for Docker
      - EMBEDDING_API_BASE=http://host.docker.internal:1234/v1
    extra_hosts:
      # Enable host.docker.internal on Linux
      - "host.docker.internal:host-gateway"
    volumes:
      - ./data:/app/data
    depends_on:
      - chroma
    profiles:
      - full
      - api-only

  web:
    build: ./frontend
    ports:
      - "5173:80"
    environment:
      - VITE_API_URL=http://api:8000
    depends_on:
      - api
    profiles:
      - full
      - web-only

  # ChromaDB for semantic memory search (optional)
  chroma:
    image: chromadb/chroma:latest
    ports:
      - "8001:8000"
    volumes:
      - chroma-data:/chroma/chroma
    profiles:
      - full
      - chroma-only

  # Logging stack (optional)
  loki:
    image: grafana/loki:2.9.0
    container_name: quietstories-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./logging/loki-config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    networks:
      - logging
    restart: unless-stopped
    profiles:
      - logging

  grafana:
    image: grafana/grafana:10.1.0
    container_name: quietstories-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./logging/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./logging/grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./logging/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_ADMIN_USER=admin
      - GF_INSTALL_PLUGINS=
    networks:
      - logging
    restart: unless-stopped
    depends_on:
      - loki
    profiles:
      - logging

  promtail:
    image: grafana/promtail:2.9.0
    container_name: quietstories-promtail
    volumes:
      - ./logging/promtail-config.yml:/etc/promtail/config.yml:ro
      - ./logs:/var/log/quietstories:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - logging
    restart: unless-stopped
    depends_on:
      - loki
    profiles:
      - logging

volumes:
  chroma-data:
    driver: local
  loki-data:
    driver: local
  grafana-data:
    driver: local

networks:
  logging:
    driver: bridge
